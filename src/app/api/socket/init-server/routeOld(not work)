import { Server as SocketIOServer } from "socket.io";
import { NextRequest } from "next/server";

const globalAny = global as any;

export async function GET(req: NextRequest) {
  if (!globalAny.io) {
    console.log("Initializing Socket.IO server...");

    // Ambil instance server Next.js
    const server = (req as any).socket?.server;

    if (!server) {
      return new Response("No server instance found", { status: 500 });
    }

    // Jika belum ada instance socket, buat yang baru
    const io = new SocketIOServer(server, {
      path: "/api/socket/io",
      cors: { origin: "*" }, // Sesuaikan jika perlu
    });

    io.on("connection", (socket) => {
      console.log(`New client connected: ${socket.id}`);

      socket.on("c_SubscribeNotif", (data) => {
        if (!data.user_id) return;
        socket.join(String(data.user_id));
        console.log(`Socket ${socket.id} joined room: ${data.user_id}`);
      });

      socket.on("disconnect", () => {
        console.log(`Client disconnected: ${socket.id}`);
      });
    });

    globalAny.io = io;
  }

  return new Response("Socket.IO server initialized", { status: 200 });
}
